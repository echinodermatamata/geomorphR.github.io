library(geomorph)
library(geiger)
data(plethspecies)
Y.gpa <- gpagen(plethspecies$land)
PCA <- gm.prcomp(Y.gpa$coords, phy = plethspecies$phy,
align.to.phy = FALSE,
GLS = FALSE)
PCAplot <- plot(PCA, pch = 16, phylo = TRUE)
PCA$rot # loadings
summary(PCA)
# Explore shape change in the plot
picknplot.shape(PCAplot)
# In case one wishes to use results for other reasons:
attributes(PCA)
PACA <- gm.prcomp(Y.gpa$coords, phy = plethspecies$phy,
align.to.phy = TRUE,
GLS = FALSE)
summary(PACA)
plot(PCA)
PCAplot <- plot(PCA, pch = 16, phylo = TRUE)
PACAplot <- plot(PACA, pch = 16, phylo = TRUE)
pPCA <- gm.prcomp(Y.gpa$coords, phy = plethspecies$phy,
align.to.phy = FALSE,
GLS = TRUE)
summary(pPCA)
pPCAplot <- plot(pPCA, pch = 16, phylo = TRUE)
data("plethShapeFood")
Y.gpa <- gpagen(plethShapeFood$land)
plot(Y.gpa)
food <- plethShapeFood$food
food
rownames(food) <- names(Y.gpa$Csize)
PLSfood <- two.b.pls(food, Y.gpa$coords,
iter = 9999)
PLSallometry <- two.b.pls(Y.gpa$Csize, Y.gpa$coords,
iter = 9999)
PLSintegration <- two.b.pls(Y.gpa$coords[1:5,, ],
Y.gpa$coords[8:13,,],
iter = 9999)
summary(PLSfood)
attributes(PLSfood)
foodPlot <- plot(PLSfood, pch = 16)
picknplot.shape(foodPlot)
hist(PLSfood$random.r, breaks = 50,
col = "olivedrab1",
main = "Sampling distribution of r")
abline(v = PLSfood$r.pls, lwd = 2, col = "skyblue4")
summary(PLSintegration)
integPlot <- plot(PLSintegration, pch = 16)
picknplot.shape(integPlot)
compare.pls(PLSfood,
PLSallometry,
PLSintegration)
fit.null <- procD.lm(coords ~ 1, data = Y.gpa,
iter = 9999)
fit.alt <- procD.lm(coords ~ log(Csize), data = Y.gpa,
iter = 9999)
model.matrix(fit.null)
model.matrix(fit.alt)
coef(fit.null)
coef(fit.alt)
fitted(fit.null)
resid(fit.null)
fitted(fit.alt)
resid(fit.alt)
## Hypothesis tests
coef(fit.alt, test = TRUE)
fit.alt <- procD.lm(coords ~ log(Csize), data = Y.gpa,
turbo = FALSE,
iter = 9999,
Parallel = FALSE)
fit.alt <- procD.lm(coords ~ log(Csize), data = Y.gpa,
turbo = FALSE,
iter = 9999,
Parallel = TRUE)
coef(fit.alt, test = TRUE)
anova(fit.null, fit.alt)
anova(fit.alt)
attributes(fit.alt)
hist(fit.alt$ANOVA$Fs)
data(pupfish)
plotAllSpecimens(pupfish$coords)  #NOTE: already GPA-aligned
#Y.gpa <- gpagen(pupfish$coords, print.progress = FALSE)    #GPA-alignment
pupfish$logSize <- log(pupfish$CS)
pupfish$Group <- interaction(pupfish$Pop, pupfish$Sex)
fit <- procD.lm(coords ~ logSize, data = pupfish, print.progress = FALSE)
anova(fit)
#plots
plot(fit, type = "regression", reg.type = "PredLine", predictor = pupfish$logSize, pch = 19)
plot(fit, type = "regression", reg.type = "RegScore", predictor = pupfish$logSize, pch = 19)
M <- mshape(pupfish$coords)
preds <- shape.predictor(fit$GM$fitted, x= pupfish$logSize, Intercept = TRUE,
predmin = min(pupfish$logSize),
predmax = max(pupfish$logSize))
par(mfrow=c(1,2))
plotRefToTarget(M, preds$predmin, mag=1)
mtext("Regression Min")
plotRefToTarget(M, preds$predmax, mag=1)
mtext("Regression Max")
par(mfrow=c(1,1))
## 2B: Group allometry
fit.common <- procD.lm(coords ~ logSize + Group,
data = pupfish, print.progress = FALSE)
fit.unique <- procD.lm(coords ~ logSize * Group,
data = pupfish, print.progress = FALSE)
anova(fit.unique)
### Pairwise Comparisons
slope.pw <- pairwise(fit.unique, fit.null = fit.common,
groups = pupfish$Group,
covariate = pupfish$logSize, print.progress = FALSE)
par(mfcol = c(1,2))
plot(fit.common, type = "regression", predictor = pupfish$logSize,
reg.type = "PredLine", pch=19, col = pupfish$Group)
legend("topleft", levels(pupfish$Group), pch = 21, pt.bg = unique(pupfish$Group))
mtext("Common Slopes")
plot(fit.unique, type = "regression", predictor = pupfish$logSize,
reg.type = "PredLine", pch=19, col = pupfish$Group)
legend("topleft", levels(pupfish$Group), pch = 21, pt.bg = unique(pupfish$Group))
mtext("Unique Slopes")
par(mfcol = c(1,1))
