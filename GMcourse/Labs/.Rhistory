# simple allometry
data(plethodon)
library(geomorph)
# simple allometry
data(plethodon)
Y.gpa <- gpagen(plethodon$land, print.progress = FALSE)    #GPA-alignment
gdf <- geomorph.data.frame(Y.gpa, site = plethodon$site,
species = plethodon$species)
fit <- procD.lm(coords ~ log(Csize), data=gdf, iter=999, print.progress = FALSE)
anova(fit)
# Predline
plotAllometry(fit, size = gdf$Csize, logsz = TRUE, method = "PredLine", pch = 19)
# same as
logSize <- log(gdf$Csize)
plot(fit, type = "regression", reg.type = "PredLine", predictor = logSize, pch = 19)
# RegScore
plotAllometry(fit, size = gdf$Csize, logsz = TRUE, method = "RegScore", pch = 19)
# Predline
plotAllometry(fit, size = gdf$Csize, logsz = TRUE, method = "PredLine", pch = 19)
?plotAllometry
# RegScore
plotAllometry(fit, size = gdf$Csize, logsz = TRUE, method = "RegScore", pch = 19)
# same as
plot(fit, type = "regression", reg.type = "RegScore", predictor = logSize, pch = 19)
# CAC
plotAllometry(fit, size = gdf$Csize, logsz = TRUE, method = "CAC", pch = 19)
fit.unique <- procD.lm(coords ~ Csize * species * site, data=gdf, iter=999, print.progress = FALSE)
fit.common <- procD.lm(coords ~ Csize + species * site, data=gdf, iter=999, print.progress = FALSE)
anova(fit.common, fit.unique, print.progress = FALSE)
anova(fit.unique)
data(pupfish)
plotAllSpecimens(pupfish$coords)
plotAllSpecimens(pupfish$coords)
Y.gpa <- gpagen(pupfish$land, print.progress = FALSE)    #GPA-alignment
Y.gpa <- gpagen(pupfish$coords, print.progress = FALSE)    #GPA-alignment
Y.gpa <- gpagen(pupfish$coords, print.progress = FALSE)    #GPA-alignment
Y.gpa$Csize
anova(fit)
pupfish$CS
fit <- procD.lm(coords ~ logSize, data = pupfish, print.progress = FALSE)
data(pupfish)
plotAllSpecimens(pupfish$coords)  #NOTE: already GPA-aligned
#Y.gpa <- gpagen(pupfish$coords, print.progress = FALSE)    #GPA-alignment
pupfish$logSize <- log(pupfish$CS)
pupfish$Group <- interaction(pupfish$Pop, pupfish$Sex)
fit <- procD.lm(coords ~ logSize, data = pupfish, print.progress = FALSE)
anova(fit)
# Predline
plotAllometry(fit, size = pupfish$logSize, logsz = FALSE, method = "PredLine", pch = 19)
# same as
plot(fit, type = "regression", reg.type = "PredLine", predictor = logSize, pch = 19)
# Predline
plot(fit, type = "regression", reg.type = "PredLine", predictor = logSize, pch = 19)
# RegScore
plot(fit, type = "regression", reg.type = "RegScore", predictor = logSize, pch = 19)
# Predline
plot(fit, type = "regression", reg.type = "PredLine", predictor = logSize, pch = 19)
# Predline
plot(fit, type = "regression", reg.type = "PredLine", predictor = pupfish$logSize, pch = 19)
# RegScore
plot(fit, type = "regression", reg.type = "RegScore", predictor = pupfish$logSize, pch = 19)
# CAC
plotAllometry(fit, size = pupfish$logSize, logsz = FALSE, method = "CAC", pch = 19)
?plot.procD.lm
## group allometries
fit.common <- procD.lm(coords ~ logSize + Group,
data = pupfish, print.progress = FALSE)
fit.unique <- procD.lm(coords ~ logSize * Group,
data = pupfish, print.progress = FALSE)
anova(fit.unique)
pupfish$Group
slope.pw <- pairwise(fit.unique, fit.null = fit.common,
groups = pupfish$Group,
covariate = pupfish$logSize, print.progress = FALSE)
summary(slope.pw, test.type = "VC", angle.type = "deg") # angular differences
summary(slope.pw, test.type = "dist", angle.type = "deg") # amount of shape change differences
plot(fit.common, type = "regression", predictor = pupfish$logSize,
reg.type = "PredLine", pch=19, col = pupfish$Group)
legend("topleft", levels(pupfish$Group), pch = 21, pt.bg = unique(pupfish$Group))
mtext("Common Slopes")
plot(fit.unique, type = "regression", predictor = pupfish$logSize,
reg.type = "PredLine", pch=19, col = pupfish$Group)
legend("topleft", levels(pupfish$Group), pch = 21, pt.bg = unique(pupfish$Group))
mtext("Unique Slopes")
###
# CAC (should not change from last time; model change has no effect)
plotAllometry(fit.unique, size = pupfish$logSize, logsz = FALSE, method = "CAC", pch = 19)
# Predline
plotAllometry(fit.unique, size = pupfish$logSize, logsz = FALSE, method = "PredLine",
pch = 19, col = as.numeric(interaction(gdf$species, gdf$site)))
###
pc.plot <- plotAllometry(fit.unique, size = pupfish$logSize, logsz = FALSE, method = "size.shape",
pch = 19, col = as.numeric(interaction(gdf$species, gdf$site)))
summary(pc.plot$size.shape.PCA)
M <- mshape(Y.gpa$coords)
preds <- shape.predictor(fit$GM$fitted, x= pupfish$logSize, Intercept = FALSE,
predmin = min(pupfish$logSize),
predmax = max(pupfish$logSize))
plotRefToTarget(M, preds$predmin, mag=1)
plotRefToTarget(M, preds$predmax, mag=1)
plotRefToTarget(M, preds$predmin, mag=3)
plotRefToTarget(M, preds$predmax, mag=3)
pupfish$logSize
pupfish$CS
log(pupfish$CS)
preds <- shape.predictor(fit$GM$fitted, x= pupfish$logSize, Intercept = TRUE,
predmin = min(pupfish$logSize),
predmax = max(pupfish$logSize))
plotRefToTarget(M, preds$predmin, mag=3)
plotRefToTarget(M, preds$predmax, mag=3)
plotRefToTarget(M, preds$predmin, mag=1)
plotRefToTarget(M, preds$predmax, mag=1)
