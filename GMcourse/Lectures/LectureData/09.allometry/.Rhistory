lizards <- readland.tps('symm.shape.tps')
library(geomorph)
lizards <- readland.tps('symm.shape.tps')
links <- read.csv('links.txt', header=FALSE, sep = " ")
links <- read.csv('Lizardlinks.txt', header=FALSE, sep = " ")
liz.lab <- read.csv('ind.info.txt',header=TRUE, sep=",")
lib.lab
liz.lab
liz.lab$pop
liz.lab$cs
is.numeric(liz.lab$cs)
Y.gpa <- gpagen(lizards, print.progress = FALSE)
plotAllSpecimens(Y.gpa$coords, links=links)
links
plotAllSpecimens(Y.gpa$coords)
plotAllSpecimens(Y.gpa$coords)
Y.gpa$Csize
gdf <- geomorph.data.frame(Y.gpa, CS = liz.lab$cs, pop = liz.lab$pop)
fit(lm.rrpp(Y.gpa$coords~CS*pop, data = gdf, print.progress = FALSE))
fit <- lm.rrpp(Y.gpa$coords~CS*pop, data = gdf, print.progress = FALSE)
gdf <- geomorph.data.frame(shape = Y.gpa$coords, CS = liz.lab$cs, pop = liz.lab$pop)
fit <- lm.rrpp(shape~CS*pop, data = gdf, print.progress = FALSE)
dim(Y.gpa$coords)
dim(liz.lab)
Y.gpa <- gpagen(lizards, print.progress = FALSE)$coords
gdf <- geomorph.data.frame(shape = Y.gpa, CS = liz.lab$cs, pop = liz.lab$pop)
plotAllSpecimens(Y.gpa)
plotAllSpecimens(Y.gpa)
fit <- lm.rrpp(shape~CS*pop, data = gdf, print.progress = FALSE)
CS <- liz.lab$cs
Y.gpa <- gpagen(lizards, print.progress = FALSE)$coords
CS <- liz.lab$cs
pop <- liz.lab$pop
gdf <- geomorph.data.frame(shape = Y.gpa, CS = CS, pop = pop)
fit <- lm.rrpp(shape~CS*pop, data = gdf, print.progress = FALSE)
gdf <- geomorph.data.frame(shape = two.d.array(Y.gpa), CS = CS, pop = pop)
fit <- lm.rrpp(shape~CS*pop, data = gdf, print.progress = FALSE)
?geomorph.data.frame
Y.gpa <- gpagen(lizards, print.progress = FALSE)
CS <- liz.lab$cs
pop <- liz.lab$pop
gdf <- geomorph.data.frame(Y.gpa, CS = CS, pop = pop)
gdf <- geomorph.data.frame(Y.gpa, CS = CS, pop = pop)
fit <- lm.rrpp(Y.gpa$coords~CS*pop, data = gdf, print.progress = FALSE)
fit <- lm.rrpp(two.d.array(Y.gpa$coords)~CS*pop, data = gdf, print.progress = FALSE)
fit <- procD.lm(Y.gpa$coords~CS*pop, data = gdf, print.progress = FALSE)
fit
anova(fit)
anova(fit)
plotTangentSpace(Y.gpa$coords, groups = pop)
pop
liz.lab$type
type <- liz.lab$type
gdf <- geomorph.data.frame(Y.gpa, CS = CS, type = type)
gdf <- geomorph.data.frame(Y.gpa, CS = CS, type = type)
fit <- procD.lm(Y.gpa$coords~CS*type, data = gdf, print.progress = FALSE)
anova(fit)
plotTangentSpace(Y.gpa$coords, groups = type)
plotTangentSpace(Y.gpa$coords, groups = type, warpgrids = FALSE)
?procD.lm
plot(fit, type = "regression", predictor = gdf$Csize, reg.type = "CRC")
plot(fit, type = "regression", predictor = gdf$Csize, reg.type = "CRC", groups = type)
plot(fit, type = "regression", predictor = gdf$Csize, reg.type = "CRC", pch=21, bg="black")
plot(fit, type = "regression", predictor = gdf$Csize, reg.type = "PredLine", pch=21, bg="black")
plot(fit, type = "regression", predictor = gdf$Csize, reg.type = "Predline", pch=21, bg="black")
plot(fit, type = "regression", predictor = gdf$Csize, reg.type = "PredLine", pch=21, bg="black")
plot(fit, type = "regression", predictor = gdf$Csize, reg.type = "CRC", pch=21, bg="black")
plot(fit, type = "regression", predictor = gdf$Csize, reg.type = "RegScore", pch=21, bg="black")
plot(fit, type = "regression", predictor = gdf$Csize, reg.type = "RegScore", pch=21, bg="black")
plot(fit, type = "regression", predictor = gdf$Csize, reg.type = "PredLine", pch=21, bg="black")
lizards
max(lizards)
min(lizards)
lizards2 <- lizards +1
lizards2
writeland.tps(lizards2,"symm.shape2.tps")
lizards <- readland.tps('symm.shape2.tps')
lizards <- readland.tps('symm.shape2.tps', warnmsg = FALSE)
library(geomorph)
lizards <- readland.tps('symm.shape2.tps', warnmsg = FALSE)
lizards2 <- lizards +1
writeland.tps(lizards2,"symm.shape2.tps")
liz.lab <- read.csv('ind.info.txt',header=TRUE, sep=",")
Y.gpa <- gpagen(lizards, print.progress = FALSE)
CS <- liz.lab$cs
type <- liz.lab$type
gdf <- geomorph.data.frame(Y.gpa, CS = CS, type = type)
plotAllSpecimens(Y.gpa$coords)
fit <- procD.lm(Y.gpa$coords~CS*type, data = gdf, print.progress = FALSE)
anova(fit)
plotTangentSpace(Y.gpa$coords, groups = type, warpgrids = FALSE)
plot(fit, type = "regression", predictor = gdf$CS, reg.type = "RegScore", pch=21, bg="black")
plot(fit, type = "regression", predictor = gdf$CS, reg.type = "PredLine", pch=21, bg="black")
plot(fit, type = "regression", predictor = gdf$CS, reg.type = "RegScore", pch=21, bg="black")
plot(fit, type = "regression", predictor = gdf$CS, reg.type = "RegScore", pch=21, bg=gdf$type")
plot(fit, type = "regression", predictor = gdf$CS, reg.type = "RegScore", pch=21, bg=gdf$type)
plot(fit, type = "regression", predictor = gdf$CS, reg.type = "RegScore", pch=21, bg="gdf$type")
plot(fit, type = "regression", predictor = gdf$CS, reg.type = "RegScore",
pch=21, col=gdf$type)
plot(fit, type = "regression", predictor = gdf$CS, reg.type = "PredLine",
pch=21, col=gdf$type)
plot(fit, type = "regression", predictor = gdf$CS, reg.type = "RegScore",
pch=21, col=gdf$type)
plot(fit, type = "regression", predictor = gdf$CS, reg.type = "RegScore",
pch=21, col=gdf$type)
plot(fit, type = "regression", predictor = gdf$CS, reg.type = "CRC",
pch=21, col=gdf$type)
plot(fit, type = "regression", predictor = gdf$CS, reg.type = "PredLine",
pch=21, bg=gdf$type)
plot(fit, type = "regression", predictor = gdf$CS, reg.type = "RegScore",
pch=21, =gdf$type)
plot(fit, type = "regression", predictor = gdf$CS, reg.type = "RegScore",
pch=21, bg=gdf$type)
library(knitr)
library(geomorph)
knitr::opts_chunk$set(echo = TRUE)
par(mfrow=c(1,1))
