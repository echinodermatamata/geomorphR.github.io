library(geomorph)
lizards <- readland.nts('lizards_LAT.nts')
lizards
dim(lizards)
links <- read.csv('links.txt')
links
Y.gpa <- gpagen(lizards)
plotAllSpecimens(Y.gpa$coords)
plotAllSpecimens(lizards)
plotAllSpecimens(lizards, links=links)
plotAllSpecimens(lizards, links = links)
links <- read.csv('links.txt', header=FALSE)
di(links)
dim(links)
links
links <- read.csv('links.txt', header=FALSE, sep = " ")
dim(links)
plotAllSpecimens(lizards, links = links)
plotAllSpecimens(Y.gpa$coords, links=links)
#############
# shape spaces:
n=2000
p=3
k=2
tri<- arrayspecs(matrix(rnorn(n*p*k),nrows=n),p=p,k=k)
library(geomorph)
tri<- arrayspecs(matrix(rnorn(n*p*k),nrows=n),p=p,k=k)
tri<- arrayspecs(matrix(rnorn(n*p*k),nrow=n),p=p,k=k)
tri<- arrayspecs(matrix(rnorm(n*p*k),nrow=n),p=p,k=k)
dim(tri)
tri.gpa <- gpagen(tri,Proj = FALSE)
pc.tri <- prcomp(two.d.array(tri.gpa$coords))$x
plot(pc.tri[,1:2])
plot(pc.tri[,1:2], asp=1, pch=21, bg="red")
library(scatterplot3d)
plot<-scatterplot3d(pc.tri[,1],pc.tri[,2],pc.tri[,3])
plot<-scatterplot3d(pc.tri[,1],pc.tri[,2],pc.tri[,3], asp=1)
plot<-scatterplot3d(pc.tri[,1],pc.tri[,2],pc.tri[,3], asp=1, pch=21, bg="red")
plot<-scatterplot3d(pc.tri[,1],pc.tri[,2],-pc.tri[,3], asp=1, pch=21, bg="red")
#############
# shape spaces:
n=5000
p=3
k=2
tri<- arrayspecs(matrix(rnorm(n*p*k),nrow=n),p=p,k=k)
tri.gpa <- gpagen(tri,Proj = FALSE)
pc.tri <- prcomp(two.d.array(tri.gpa$coords))$x
plot(pc.tri[,1:2], asp=1, pch=21, bg="red")
plot<-scatterplot3d(pc.tri[,1],pc.tri[,2],-pc.tri[,3], asp=1, pch=21, bg="red")
#############
# shape spaces:
n=1000
p=3
k=2
tri<- arrayspecs(matrix(rnorm(n*p*k),nrow=n),p=p,k=k)
tri.gpa <- gpagen(tri,Proj = FALSE)
pc.tri <- prcomp(two.d.array(tri.gpa$coords))$x
plot(pc.tri[,1:2], asp=1, pch=21, bg="red")
plot<-scatterplot3d(pc.tri[,1],pc.tri[,2],-pc.tri[,3], asp=1, pch=21, bg="red")
#############
# shape spaces:
n=2000
p=3
k=2
tri<- arrayspecs(matrix(rnorm(n*p*k),nrow=n),p=p,k=k)
tri.gpa <- gpagen(tri,Proj = FALSE)
pc.tri <- prcomp(two.d.array(tri.gpa$coords))$x
plot(pc.tri[,1:2], asp=1, pch=21, bg="red")
plot<-scatterplot3d(pc.tri[,1],pc.tri[,2],-pc.tri[,3], asp=1, pch=21, bg="red")
plot<-scatterplot3d(pc.tri[,1],pc.tri[,2],pc.tri[,3], asp=1, pch=21, bg="red")
#############
# shape spaces:
n=2000
p=3
k=2
seed = 2
tri<- arrayspecs(matrix(rnorm(n*p*k),nrow=n),p=p,k=k)
tri.gpa <- gpagen(tri,Proj = FALSE)
pc.tri <- prcomp(two.d.array(tri.gpa$coords))$x
plot<-scatterplot3d(pc.tri[,1],pc.tri[,2],pc.tri[,3], asp=1, pch=21, bg="red")
seed = 4
tri<- arrayspecs(matrix(rnorm(n*p*k),nrow=n),p=p,k=k)
tri.gpa <- gpagen(tri,Proj = FALSE)
pc.tri <- prcomp(two.d.array(tri.gpa$coords))$x
plot<-scatterplot3d(pc.tri[,1],pc.tri[,2],pc.tri[,3], asp=1, pch=21, bg="red")
plot(pc.tri[,1:2], asp=1, pch=21, bg="red")
plot<-scatterplot3d(pc.tri[,1],pc.tri[,2],pc.tri[,3], asp=1, pch=21, cex=.6,bg="red")
plot<-scatterplot3d(pc.tri[,1],pc.tri[,2],pc.tri[,3], asp=1, pch=21,bg="red")
?scatterplot3d
plot<-scatterplot3d(pc.tri[,1],pc.tri[,2],pc.tri[,3], asp=1, pch=21,bg="red",
tick.marks = FALSE)
plot<-scatterplot3d(pc.tri[,1],pc.tri[,2],pc.tri[,3], asp=1, pch=21,bg="red",
tick.marks = FALSE, axis=FALSE)
plot<-scatterplot3d(pc.tri[,1],pc.tri[,2],pc.tri[,3], asp=1, pch=21,bg="red",
tick.marks = FALSE, xlab=FALSE)
plot<-scatterplot3d(pc.tri[,1],pc.tri[,2],pc.tri[,3], asp=1, pch=21,bg="red",
tick.marks = FALSE, xlab=NULL)
plot<-scatterplot3d(pc.tri[,1],pc.tri[,2],pc.tri[,3], asp=1, pch=21,bg="red",
tick.marks = FALSE, box=FALSE, xlab=NULL)
plot(pc.tri[,1:2], asp=1, pch=21, bg="red")
plot(pc.tri[,1],pc.tri[,2], asp=1, pch=21, bg="red")
plot(pc.tri[,1:2], asp=1, pch=21, bg="red")
liz.lab <- read.csv('liz_groups.csv',header=TRUE)
liz.lab
liz.lab <- read.csv('liz_groups.csv',header=TRUE, sep="\t")
lib.lab
liz.lab
liz.lab$SEX
?plotAllSpecimens
plotAllSpecimens(lizards, links = links, plot.param = list(c(pt.bg=liz.lab)))
lizards <- readland.nts('lizards_LAT.nts')
links <- read.csv('links.txt', header=FALSE, sep = " ")
liz.lab <- read.csv('liz_groups.csv',header=TRUE, sep="\t")
Y.gpa <- gpagen(lizards, print.progress = FALSE)
plotAllSpecimens(lizards, links = links, plot.param = list(c(pt.bg=liz.lab)))
plotAllSpecimens(Y.gpa$coords, links=links)
plotAllSpecimens(lizards, links = links)
plotAllSpecimens(Y.gpa$coords, links=links)
setwd("C:/DeanData/Teaching/Workshops/2019-Chile/2019-Chile/Lectures")
n=2000
p=3
k=2
seed = 2
tri<- arrayspecs(matrix(runif(n*p*k),nrow=n),p=p,k=k)
tri.gpa <- gpagen(tri,Proj = FALSE, print.progress = FALSE)
pc.tri <- prcomp(two.d.array(tri.gpa$coords))$x
plot<-scatterplot3d(pc.tri[,1],pc.tri[,2],pc.tri[,3], asp=1, pch=21,bg="red",
tick.marks = FALSE, box=FALSE)
plot(pc.tri[,1:2], asp=1, pch=21, bg="red")
plot<-scatterplot3d(pc.tri[,1],pc.tri[,2],pc.tri[,3], asp=1, pch=21,bg="red",
tick.marks = FALSE, box=FALSE)
pc.tri[,3]
range(pc.tri[,3])
tri<- arrayspecs(matrix(runif(n*p*k),nrow=n),p=p,k=k)
tri.gpa <- gpagen(tri,Proj = FALSE, print.progress = FALSE)
pc.tri <- prcomp(two.d.array(tri.gpa$coords))$x
plot<-scatterplot3d(pc.tri[,1],pc.tri[,2],pc.tri[,3], asp=1, pch=21,bg="red",
tick.marks = FALSE, box=FALSE)
range(pc.tri[,3])
tri<- arrayspecs(matrix(runif(n*p*k),nrow=n),p=p,k=k)
tri.gpa <- gpagen(tri,Proj = FALSE, print.progress = FALSE)
pc.tri <- prcomp(two.d.array(tri.gpa$coords))$x
plot<-scatterplot3d(pc.tri[,1],pc.tri[,2],pc.tri[,3], asp=1, pch=21,bg="red",
tick.marks = FALSE, box=FALSE)
range(pc.tri[,3])
tri<- arrayspecs(matrix(runif(n*p*k),nrow=n),p=p,k=k)
tri.gpa <- gpagen(tri,Proj = FALSE, print.progress = FALSE)
pc.tri <- prcomp(two.d.array(tri.gpa$coords))$x
plot<-scatterplot3d(pc.tri[,1],pc.tri[,2],pc.tri[,3], asp=1, pch=21,bg="red",
tick.marks = FALSE, box=FALSE)
range(pc.tri[,3])
tri<- arrayspecs(matrix(runif(n*p*k),nrow=n),p=p,k=k)
tri.gpa <- gpagen(tri,Proj = FALSE, print.progress = FALSE)
pc.tri <- prcomp(two.d.array(tri.gpa$coords))$x
plot<-scatterplot3d(pc.tri[,1],pc.tri[,2],pc.tri[,3], asp=1, pch=21,bg="red",
tick.marks = FALSE, box=FALSE)
range(pc.tri[,3])
tri<- arrayspecs(matrix(runif(n*p*k),nrow=n),p=p,k=k)
tri.gpa <- gpagen(tri,Proj = FALSE, print.progress = FALSE)
pc.tri <- prcomp(two.d.array(tri.gpa$coords))$x
plot<-scatterplot3d(pc.tri[,1],pc.tri[,2],pc.tri[,3], asp=1, pch=21,bg="red",
tick.marks = FALSE, box=FALSE)
range(pc.tri[,3])
which.min(abs(range(pc.tri[,3])))
mult.pc <- ifelse(which.min(abs(range(pc.tri[,3])))=1{-1,1}
mult.pc <- ifelse(which.min(abs(range(pc.tri[,3])))==1{-1,1}
mult.pc <- ifelse(which.min(abs(range(pc.tri[,3])))==1){-1,1}
mult.pc <- ifelse(which.min(abs(range(pc.tri[,3])))==1-1,1)
mult.pc <- ifelse(which.min(abs(range(pc.tri[,3])))==1,-1,1)
mult.pc
plot<-scatterplot3d(pc.tri[,1],pc.tri[,2],mult.pc*pc.tri[,3], asp=1, pch=21,bg="red",
tick.marks = FALSE, box=FALSE)
seed = 2
tri<- arrayspecs(matrix(runif(n*p*k),nrow=n),p=p,k=k)
tri.gpa <- gpagen(tri,Proj = FALSE, print.progress = FALSE)
pc.tri <- prcomp(two.d.array(tri.gpa$coords))$x
mult.pc <- ifelse(which.min(abs(range(pc.tri[,3])))==1,-1,1)
mult.pc
plot<-scatterplot3d(pc.tri[,1],pc.tri[,2],mult.pc*pc.tri[,3], asp=1, pch=21,bg="red",
tick.marks = FALSE, box=FALSE)
plot<-scatterplot3d(pc.tri[,1],pc.tri[,2],pc.tri[,3], asp=1, pch=21,bg="red",
tick.marks = FALSE, box=FALSE)
geomorph:::phylo.mat
e <= matrix(c(.721, -.721,.721,-.721,-.721, .721,-.721,.721,.721, -.721,.721,-.721,-.721, .721,-.721,.721)),byrow=T,ncol=4)
e <- matrix(c(.721, -.721,.721,-.721,-.721, .721,-.721,.721,.721, -.721,.721,-.721,-.721, .721,-.721,.721)),byrow=T,ncol=4)
c(.721, -.721,.721,-.721,-.721, .721,-.721,.721,.721, -.721,.721,-.721,-.721, .721,-.721,.721)
matrix(c(.721, -.721,.721,-.721,-.721, .721,-.721,.721,.721, -.721,.721,-.721,-.721, .721,-.721,.721),ncol=4)
matrix(c(.721, -.721,.721,-.721,-.721, .721,-.721,.721,.721, -.721,.721,-.721,-.721, .721,-.721,.721),ncol=4)->E
E
eigen(E)$vectors
eigen(E)$values
plotAllSpecimens(tri.gpa$coords)
tri.gpa2 <- gpagen(tri, print.progress = FALSE)
plotAllSpecimens(tri.gpa2$coords)
dist.shape <- dist(two.d.array(tri.gpa$coords))
dist.Kendall <- dist(two.d.array(tri.gpa2$coords))
cor(dist.shape,dist.Kendall)
plot(dist.shape,dist.Kendall)
library(geomorph)
lizards <- readland.nts('LectureData/04.shape.vars/lizards_LAT.nts')
links <- read.csv('LectureData/04.shape.vars/links.txt', header=FALSE, sep = " ")
liz.lab <- read.csv('LectureData/04.shape.vars/liz_groups.csv',header=TRUE, sep="\t")
col.gp <- rep("red",nrow(liz.lab))
col.gp[which(liz.lab$SEX=='M')] <- 'blue'
Y.gpa <- gpagen(lizards, print.progress = FALSE)
plotAllSpecimens(Y.gpa$coords)
plotAllSpecimens(Y.gpa$coords, links=links)
dim(lizards)
n <- dim(lizards)[1];p <- dim(lizards)[2]
Yc <- simplify2array(lapply(1:dim(lizards)[3], function(j)
geomorph:::fast.center(lizards[,,j],n,p)))
Yc.rot <- simplify2array(lapply(1:dim(lizards)[3], function(j)
Y.gpa$coords[,,j]*Y.gpa$Csize[[j]]))
plotAllSpecimens(lizards, links = links)
plotAllSpecimens(Yc,links = links)
plotAllSpecimens(Yc.rot,links = links)
?plotAllSpecimens
plotAllSpecimens(Yc.rot,links = links, main="t")
?mtext
gdf <- geomorph.data.frame(Y.gpa, gp = col.gp)
res <- procD.lm(Y.gpa$coords~ gp, data = gdf, print.progress = FALSE)
res$aov.table
res<-plotTangentSpace(Y.gpa$coords,warpgrids = FALSE, groups=col.gp)
res$sdev
zapsmall(res$sdev)
res$pc.summary
setwd("C:/DeanData/Teaching/Workshops/2019-Chile/2019-Chile/Lectures")
library(RRPP)
library(geomorph)
?trajectory.analysis
data(Pupfish)
fit <- lm.rrpp(coords ~ Pop * Sex, data = Pupfish, iter = 999)
fit <- lm.rrpp(coords ~ Pop * Sex, data = Pupfish, iter = 999, print.progress = FALSE)
TA <- trajectory.analysis(fit, groups = Pupfish$Pop, traj.pts = Pupfish$Sex)
summary(TA, attribute = "MD")
plot(TA)
?include_graphics
opts_chunk$set
?opts_chunk$set
?phylo.integration
library(geomorph)
?phylo.integration
shape[,,1]
setwd("C:/DeanData/Teaching/Workshops/2019-Chile/2019-Chile/Lectures/LectureData/10.pcm")
library(ape)
library(geomorph)
plethtree <- read.tree('plethtree.tre')
dat <- read.csv('svl.csv', header=TRUE, row.names=1)
svl <-dat[,1]; names(svl) <- rownames(dat)
shape <- readland.tps('headshape.tps',specID = "ID",warnmsg = FALSE)
plethgps <- read.csv('Gps.csv',header=TRUE, row.names=1)
plethgps <- plethgps[match(dimnames(shape)[[3]],rownames(plethgps)),]
gdf <- geomorph.data.frame(shape=shape, svl=svl,elev = as.factor(plethgps$ElevGp),
plethtree=plethtree)
links <- matrix(c(4,3,2,1,1,6,7,8,9,10,1,1,11,5,5,4,2,3,7,8,9,10,11,9,10,1),
ncol=2,byrow=FALSE)
plot(ladderize(plethtree),edge.width=3)
axisPhylo(1)
plotAllSpecimens(shape,links=links)
##Regression
pgls.reg <- procD.pgls(f1 = shape~svl, effect.type = 'cohen', data=gdf,
phy=plethtree, print.progress = FALSE)
summary(pgls.reg)$table
plot.res <- gm.prcomp(shape,phy=plethtree, data=gdf)
plot(plot.res,phylo = TRUE, pch=21, bg="red", cex=1.5)
## anova
pgls.aov <- procD.pgls(f1 = shape~elev, effect.type = 'cohen', data=gdf,
phy=plethtree, print.progress = FALSE)
summary(pgls.aov)$table
pc.plot <- plot(pgls.aov,type = "PC", pch=21, cex=1.5,bg=gdf$elev)
shapeHulls(pc.plot, groups = gdf$elev,
group.cols = c("red", "black"),
group.lwd = rep(1, 2), group.lty = c(2, 1))
legend("topright", levels(gdf$elev),
col = c("black", "red"),
lwd = rep(1,2), lty = c(2, 1))
M <- mshape(shape)
Low <- c(1) # design for low elevation
High <- c(0) # design for high elevation
preds <- shape.predictor(arrayspecs(pgls.aov$pgls.fitted, 11,2), x= pgls.aov$X[,-1],
Intercept = TRUE, Low = Low, High = High)
plotRefToTarget(M, preds$Low, mag=2, links=links)
plotRefToTarget(M, preds$High, mag=2, links=links)
include_graphics("lectureData/10.pcm/11-PCM-PlethMeas.png")
land.gps<-c("A","A","A","A","A","B","B","B","B","B","B")
PLS.Y <- phylo.integration(A = gdf$shape, partition.gp = land.gps, phy= plethtree, print.progress = FALSE)
PLS.Y$r.pls; PLS.Y$P.value
plot(PLS.Y)
preds <- shape.predictor(gdf$shape[(1:5),,], gdf$shape[(6:11),,], Intercept = FALSE,
method = "PLS",
pred1 = -0.2, pred2 = 0.2) # using PLS plot as a guide
preds <- shape.predictor(gdf$shape[(1:5),,], gdf$shape[(6:11),,], Intercept = FALSE,
method = "PLS",
pred1 = -0.2, pred2 = 0.2) # using PLS plot as a guide
preds <- shape.predictor(gdf$shape[(1:5),,], x=gdf$shape[(6:11),,], Intercept = FALSE,
method = "PLS",
pred1 = -0.2, pred2 = 0.2) # using PLS plot as a guide
preds <- shape.predictor(gdf$shape[(1:5),,], x=two.d.array(gdf$shape[(6:11),,]), Intercept = FALSE,
method = "PLS",
pred1 = -0.2, pred2 = 0.2) # using PLS plot as a guide
plotRefToTarget(M, preds$pred1, mag=2)
preds$pred1
plotRefToTarget(M[1:5,], preds$pred1, mag=2)
plotRefToTarget(M[1:5,], preds$pred2, mag=2)
plotRefToTarget(M[1:5,], preds$pred2, mag=5)
plotRefToTarget(M[1:5,], preds$pred1, mag=5)
preds <- shape.predictor(gdf$shape[(1:5),,], x=two.d.array(gdf$shape[(6:11),,]), Intercept = FALSE,
method = "PLS",
pred1 = -2, pred2 = 2) # using PLS plot as a guide
plotRefToTarget(M[1:5,], preds$pred1, mag=2)
plotRefToTarget(M[1:5,], preds$pred2, mag=2)
preds <- shape.predictor(gdf$shape[(6:11),,], x=two.d.array(gdf$shape[(1:5),,]), Intercept = FALSE,
method = "PLS",
pred1 = -2, pred2 = 2) # using PLS plot as a guide
plotRefToTarget(M[6:11,], preds$pred1, mag=2)
plotRefToTarget(M[6:11,], preds$pred2, mag=2)
data(plethShapeFood)
Y.gpa<-gpagen(plethShapeFood$land)    #GPA-alignment
# 2B-PLS between head shape and food use data
PLS <-two.b.pls(A1 = plethShapeFood$food, A2 = Y.gpa$coords, iter=999)
summary(PLS)
plot(PLS)
preds <- shape.predictor(gdf$shape[(1:5),,], x=two.d.array(gdf$shape[(6:11),,]), Intercept = FALSE,
method = "PLS",
pred1 = -.2, pred2 = .2) # using PLS plot as a guide
plotRefToTarget(M[1:5,], preds$pred1, mag=2)
plotRefToTarget(M[1:5,], preds$pred2, mag=2)
plotRefToTarget(M[1:5,], preds$pred1, mag=3)
plotRefToTarget(M[1:5,], preds$pred2, mag=3)
?compare.evol.rates
ER<-compare.evol.rates(A=gdf$shape, phy=plethtree,method="simulation",gp=gdf$elev,iter=999)
gdf$elev
elev <- as.factor(plethgps$ElevGp); names(elev) <- rownames(plethgps)
elev
gdf <- geomorph.data.frame(shape=shape, svl=svl,elev = as.factor(plethgps$ElevGp), plethtree=plethtree)
ER<-compare.evol.rates(A=gdf$shape, phy=plethtree,method="simulation",gp=gdf$elev,iter=999)
gdf$elev
gdf$svl
elev
names(elev)
gdf <- geomorph.data.frame(shape=shape, svl=svl,elev = elev, plethtree=plethtree)
gdf$elev
ER<-compare.evol.rates(A=gdf$shape, phy=plethtree,method="simulation",gp=gdf$elev,iter=999)
summary(ER)
plot(ER)
ER<-compare.evol.rates(A=gdf$shape, phy=plethtree,gp=gdf$elev,iter=999)
summary(ER)
plot(ER)
ER<-compare.evol.rates(A=gdf$shape, phy=plethtree,gp=gdf$elev,iter=999, print.progress = FALSE)
summary(ER)
plot(ER)
ER$random.sigma
gdf$elev
ER$random.sigma
data(plethspecies)
Y.gpa<-gpagen(plethspecies$land)    #GPA-alignment
gp.end<-factor(c(0,0,1,0,0,1,1,0,0))  #endangered species vs. rest
names(gp.end)<-plethspecies$phy$tip
ER<-compare.evol.rates(A=Y.gpa$coords, phy=plethspecies$phy,method="simulation",gp=gp.end,iter=999)
summary(ER)
ER$random.sigma
ER<-compare.evol.rates(A=Y.gpa$coords, phy=plethspecies$phy,method="permutation",gp=gp.end,iter=999)
summary(ER)
ER$random.sigma
library(ape)
library(geomorph)
plethtree <- read.tree('plethtree.tre')
dat <- read.csv('svl.csv', header=TRUE, row.names=1)
svl <-dat[,1]; names(svl) <- rownames(dat)
shape <- readland.tps('headshape.tps',specID = "ID",warnmsg = FALSE)
plethgps <- read.csv('Gps.csv',header=TRUE, row.names=1)
plethgps <- plethgps[match(dimnames(shape)[[3]],rownames(plethgps)),]
elev <- as.factor(plethgps$ElevGp); names(elev) <- rownames(plethgps)
gdf <- geomorph.data.frame(shape=shape, svl=svl,elev = elev, plethtree=plethtree)
links <- matrix(c(4,3,2,1,1,6,7,8,9,10,1,1,11,5,5,4,2,3,7,8,9,10,11,9,10,1),
ncol=2,byrow=FALSE)
plot(ladderize(plethtree),edge.width=3)
axisPhylo(1)
plotAllSpecimens(shape,links=links)
##Regression
pgls.reg <- procD.pgls(f1 = shape~svl, effect.type = 'cohen', data=gdf,
phy=plethtree, print.progress = FALSE)
summary(pgls.reg)$table
plot.res <- gm.prcomp(shape,phy=plethtree, data=gdf)
plot(plot.res,phylo = TRUE, pch=21, bg="red", cex=1.5)
## anova
pgls.aov <- procD.pgls(f1 = shape~elev, effect.type = 'cohen', data=gdf,
phy=plethtree, print.progress = FALSE)
summary(pgls.aov)$table
pc.plot <- plot(pgls.aov,type = "PC", pch=21, cex=1.5,bg=gdf$elev)
shapeHulls(pc.plot, groups = gdf$elev,
group.cols = c("red", "black"),
group.lwd = rep(1, 2), group.lty = c(2, 1))
legend("topright", levels(gdf$elev),
col = c("black", "red"),
lwd = rep(1,2), lty = c(2, 1))
M <- mshape(shape)
Low <- c(1) # design for low elevation
High <- c(0) # design for high elevation
preds <- shape.predictor(arrayspecs(pgls.aov$pgls.fitted, 11,2), x= pgls.aov$X[,-1],
Intercept = TRUE, Low = Low, High = High)
plotRefToTarget(M, preds$Low, mag=2, links=links)
plotRefToTarget(M, preds$High, mag=2, links=links)
land.gps<-c("A","A","A","A","A","B","B","B","B","B","B")
PLS.Y <- phylo.integration(A = gdf$shape, partition.gp = land.gps, phy= plethtree, print.progress = FALSE)
PLS.Y$r.pls; PLS.Y$P.value
plot(PLS.Y)
ER<-compare.evol.rates(A=gdf$shape, phy=plethtree,gp=gdf$elev,iter=999, print.progress = FALSE)
summary(ER)
ER<-compare.evol.rates(A=gdf$shape, phy=plethtree,gp=gdf$elev,iter=999, method = 'permutation',print.progress = FALSE)
summary(ER)
plot(ER)
?compare.multi.evol.rates
compare.multi.evol.rates(A=gdf$shape, phy=plethtree, gp=land.gps)
compare.multi.evol.rates(A=gdf$shape, phy=plethtree, gp=land.gps, print.progress = FALSE)
